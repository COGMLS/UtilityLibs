#pragma once

#ifndef SETTINGS_LIBRARY_COMMON_DATA_TYPES_HPP
#define SETTINGS_LIBRARY_COMMON_DATA_TYPES_HPP

#include "pch.h"

namespace SettingsLib
{
	/// @brief Settings Field Error Status for Check Field function.
	/// @note All error will be treated with zero or negative values
	enum SettingsFieldErrorStatus : long long
	{
		SETTINGS_FIELD_STATUS_NO_VALID_INDEX = 0ll,
		SETTINGS_FIELD_STATUS_COMMENTED_LINE = -1ll,
		SETTINGS_FIELD_STATUS_FILE_NOT_OPENED = -2ll,
		SETTINGS_FIELD_STATUS_CAN_NOT_FIND_FIELD = -3ll,
		SETTINGS_FIELD_STATUS_OK_NO_DATA_START_POINT = -4ll,
		SETTINGS_FIELD_STATUS_OK_DATA_START_POINT_OK_NO_DATA_END_MARK = -5ll,
		SETTINGS_FIELD_STATUS_OPENED_NOT_CLOSED = -6ll,
		SETTINGS_FIELD_STATUS_NOT_OPEN = -7ll,
		SETTINGS_FIELD_STATUS_NOT_THE_CORRECT_FIELD = -8ll,
		SETTINGS_FIELD_STATUS_NO_DATA_AFTER_FIELD = -9ll,
		SETTINGS_FIELD_STATUS_CAN_NOT_FIND_SUBFIELD = -10ll,
		SETTINGS_FIELD_STATUS_POSSIBLE_CONFIG_LINE = -11ll,
		SETTINGS_FIELD_STATUS_UNKNOWN_ERROR = -12ll
	};

	/// @brief Configuration Error Status
	enum ConfigDataErrorStatus : unsigned long long
	{
		CONFIG_DATA_ERROR_STATUS_OK,
		CONFIG_DATA_ERROR_STATUS_CONFIG_COMMENTED,
		CONFIG_DATA_ERROR_STATUS_CONFIG_ID_FAIL,
		CONFIG_DATA_ERROR_STATUS_CONFIG_DATA_FAIL,
		CONFIG_DATA_ERROR_STATUS_CONFIG_DATA_EMPTY
	};

	/// @brief Configuration Data Type control
	enum ConfigDataType : int
	{
		SETTINGS_LIB_CONFIG_DATA_FAIL,
		SETTINGS_LIB_CONFIG_DATA_EMPTY,
		SETTINGS_LIB_UNSIGNED_INTEGER,
		SETTINGS_LIB_INTERGER,
		SETTINGS_LIB_FLOAT,
		SETTINGS_LIB_STRING,
		SETTINGS_LIB_BOOLEAN,
		SETTINGS_LIB_WSTRING
	};
}

#endif // !SETTINGS_LIBRARY_COMMON_DATA_TYPES_HPP